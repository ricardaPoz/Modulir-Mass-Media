<Window x:Class="Modulir_Mass_Media.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Modulir_Mass_Media" 
        xmlns:local1="clr-namespace:Modulir_Mass_Media.Classes" 
        xmlns:local2="clr-namespace:Modulir_Mass_Media.Helpers"
        mc:Ignorable="d"
        Title="" MinHeight="518" 
        MinWidth="788" 
        WindowStartupLocation="CenterScreen" 
        Width="0"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        ResizeMode="CanResize"
        >
    <WindowChrome.WindowChrome>
        <WindowChrome 
        CaptionHeight="0"
        ResizeBorderThickness="5" />
    </WindowChrome.WindowChrome>
    <Window.Resources>
        <Style x:Key="StyleButton" TargetType="Button">
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" CornerRadius="3"  Background="#238636">
                            <ContentPresenter x:Name="contentPresenter" Margin="15 0 15 0" Content="Читать подробнее" HorizontalAlignment="Center"  VerticalAlignment="Center" TextElement.FontSize="17"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#2EA043"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#30A53B"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="True">
                                <Setter Property="TextElement.FontWeight" TargetName="contentPresenter" Value="Bold"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ListBoxItem}" x:Key="StyleListView">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Margin="10 0 0 0" x:Name="item_border" CornerRadius="10"  Background="#F5F5F5">
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="item_border" Value="#F5F5F5"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="item_border" Value="#F5F5F5"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="item_border" Value="#F5F5F5"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PathStyleClose" TargetType="{x:Type Path}">
            <Setter Property="Data" Value="M336.559,68.611L231.016,174.165l105.543,105.549c15.699,15.705,15.699,41.145,0,56.85
		                                   c-7.844,7.844-18.128,11.769-28.407,11.769c-10.296,0-20.581-3.919-28.419-11.769L174.167,231.003L68.609,336.563
		                                   c-7.843,7.844-18.128,11.769-28.416,11.769c-10.285,0-20.563-3.919-28.413-11.769c-15.699-15.698-15.699-41.139,0-56.85
		                                   l105.54-105.549L11.774,68.611c-15.699-15.699-15.699-41.145,0-56.844c15.696-15.687,41.127-15.687,56.829,0l105.563,105.554
		                                   L279.721,11.767c15.705-15.687,41.139-15.687,56.832,0C352.258,27.466,352.258,52.912,336.559,68.611z"/>
            <Setter Property="Fill" Value="Gray"/>
            <Setter Property="Stroke" Value="#00000000"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Fill" Value="#adacac"/>
                    <Setter Property="Stroke" Value="#00000000"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="PathStyleUncoverAndHide" TargetType="{x:Type Path}">
            <Setter Property="Data" Value="M132 307 c-61 -62 -112 -119 -112 -128 0 -18 31 
                    -49 49 -49 7 0 52 36 99 80 48 44 89 80 93 80 3 0 45 
                    -36 92 -80 47 -44 92 -80 99 -80 18 0 48 32 48 51 0 19 
                    -221 239 -240 239 -9 0 -66 -51 -128 -113z"/>
            <Setter Property="Fill" Value="Gray"/>
            <Setter Property="Stroke" Value="#00000000"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Fill" Value="#adacac"/>
                    <Setter Property="Stroke" Value="#00000000"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="TabItemStyle" TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true" Margin="2 0 0 0">
                            <Border x:Name="mainBorder" Background="#242730"  Margin="0">
                                <Border x:Name="innerBorder" Background="#464650"  Margin="-1" Opacity="0"/>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!--при навидении на элемент tab control-->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="#515159"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,-2,-2,0"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.DataContext>
        <local1:ModulationMediaWork/>
    </Window.DataContext>
    <Border 
        x:Name="container" 
        MouseDown="container_MouseDown" 
        CornerRadius="15" 
        Background="#464650"
        >
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="0.06*"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <Grid Margin="0 10 10 0">
                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                    <CheckBox
                        x:Name="cmbUncoverAndHide"
                        Checked="cmbUncoverAndHide_Checked"
                        Unchecked="cmbUncoverAndHide_Unchecked"
                        RenderTransformOrigin="0.5 0.5"
                        Margin="10 0 10 0"
                        >
                        <CheckBox.Template>
                            <ControlTemplate TargetType="CheckBox">
                                <Grid Background="Transparent">
                                    <Viewbox Width="16" Height="16" RenderTransformOrigin="0.5,0.6">
                                        <Viewbox.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform Angle="180"/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Viewbox.RenderTransform>
                                        <Path Style="{DynamicResource PathStyleUncoverAndHide}"/>
                                    </Viewbox>
                                </Grid>
                            </ControlTemplate>
                        </CheckBox.Template>
                        <CheckBox.RenderTransform>
                            <RotateTransform Angle="0"/>
                        </CheckBox.RenderTransform>
                        <CheckBox.Style>
                            <Style TargetType="CheckBox">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}" Value="Maximized">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation
                                                    Storyboard.TargetProperty="RenderTransform.(RotateTransform.Angle)"
                                                    To="180"
                                                    Duration="0:0:0.2" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <Setter Property="IsChecked" Value="True"/>
                                    </DataTrigger>
                                    <EventTrigger RoutedEvent="Checked">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetProperty="RenderTransform.(RotateTransform.Angle)"
                                                    To="180"
                                                    Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                    <EventTrigger RoutedEvent="Unchecked">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetProperty="RenderTransform.(RotateTransform.Angle)"
                                                    To="0"
                                                    Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Style.Triggers>
                            </Style>
                        </CheckBox.Style>
                    </CheckBox>
                    <Viewbox x:Name="closeForm" MouseDown="closeForm_MouseDown" Height="15" Width="15" Margin="0 3.1 10 0">
                        <Path Style="{DynamicResource PathStyleClose}"/>
                    </Viewbox>
                </StackPanel>
            </Grid>
            <Grid Grid.Row="1" Background="#464650">
                <TabControl 
                    Background="#464650" 
                    TabStripPlacement="Top" 
                    BorderThickness="0"
                    >
                    <TabItem Style="{DynamicResource TabItemStyle}">
                        <TabItem.Header>
                            <TextBlock 
                                Foreground="#8E8E95" 
                                FontSize="25" 
                                Text="Все новости"/>
                        </TabItem.Header>
                        <TabItem.Content>
                            <Grid>
                                <ListView 
                                    x:Name="listView"
                                    Grid.Row="1" 
                                    ItemContainerStyle="{DynamicResource StyleListView}"  
                                    BorderThickness="0" 
                                    Background="#F5F5F5" 
                                    HorizontalContentAlignment="Stretch" 
                                    ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                                    ItemsSource="{Binding MassMediaInformationProducts}" 
                                    >
                                    <ListView.ItemTemplate >
                                        <DataTemplate>
                                            <Border BorderThickness="1" BorderBrush="#D8D8D8" Background="White" CornerRadius="10" Margin="0 10 10 0">
                                                <Grid Height="120" Background="#FFFFFF" Margin="10 10 0 10">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="1.5*"/>
                                                        <ColumnDefinition Width="8.5*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Image HorizontalAlignment="Left" Margin="0 0 10 0" Source="https://icdn.lenta.ru/images/2021/05/09/05/20210509050746907/pic_a52ea4d555a482c55c87acd0a5bcaff0.jpg"/>
                                                    <Grid Height="auto" Grid.Column="1" Margin="0 0 10 10">
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="1.5*"/>
                                                            <RowDefinition Height="2*"/>
                                                            <RowDefinition Height="1.5*"/>
                                                            <RowDefinition Height="1.3*"/>
                                                        </Grid.RowDefinitions>
                                                        <Grid Grid.Row="0" >
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*"/>
                                                                <ColumnDefinition Width="*"/>
                                                            </Grid.ColumnDefinitions>
                                                            <TextBlock Grid.Column="0" VerticalAlignment="Center" TextWrapping="Wrap" FontSize="16"  Text="{Binding NameMassMedia}" />
                                                            <TextBlock Grid.Column="1" Foreground="#818181" FontSize="16" TextAlignment="Justify" VerticalAlignment="Center"  Grid.Row="0" HorizontalAlignment="Right"  Text="{Binding DatePublication}"/>
                                                        </Grid>
                                                        <Viewbox Grid.Row="1" HorizontalAlignment="Left">
                                                            <TextBlock  FontWeight="Bold" Height="auto" TextWrapping="Wrap"  FontSize="23" Grid.Row="1" Text="{Binding InformationProduct.TitleProduct}"/>
                                                        </Viewbox>
                                                        <TextBlock Height="auto" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" FontSize="17" Grid.Row="2" Text="{Binding InformationProduct.ContentProduct}" />
                                                        <Button Style="{DynamicResource StyleButton}" HorizontalAlignment="Left" Grid.Row="3"></Button>
                                                    </Grid>
                                                </Grid>
                                            </Border>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </Grid>
                        </TabItem.Content>
                    </TabItem>
                    <TabItem Style="{DynamicResource TabItemStyle}">
                        <TabItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock 
                                    Text="Подписки" 
                                    Foreground="#8E8E95" 
                                    FontSize="25"/>
                            </StackPanel>
                        </TabItem.Header>
                        <TabItem.Content>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Label FontSize="30">dasdsadsa</Label>
                                <Label FontFamily="/Fonts/#PTSans" Grid.Row="1" FontSize="30">dasdsadsa</Label>
                            </Grid>
                        </TabItem.Content>
                    </TabItem>
                </TabControl>
                <Grid>
                </Grid>
            </Grid>
        </Grid>
    </Border>
</Window>

    
